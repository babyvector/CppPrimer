Q：列出5个迭代器类别，以及每个类迭代器所支持的操作
A：迭代器类别（暂时了解不是很全面，所以写的可能不够完善）

1. 输入迭代器     	只读，不写，单遍扫描，只能递增
	* 比较两个迭代器的相等和不相等运算符(== !=)
	* 用于推进迭代器的前置和后置递增运算(++)
	* 读取元素的解引用运算符(*),只会出现在赋值运算符的右侧
	* 箭头运算符(->)等价于(*it).member
2. 输出迭代器     	只写，不读，单遍扫描，只能递增
	* ++
	* 解引用运算符(*)，只出现在幅值运算符的左侧（向一个已经解引用的输出迭代器赋值，就是**将值写入它指向的元素**ostream_iterator就是一个输出迭代器）
3. 前向迭代器		 	可读写；多遍扫描，只能递增
	* == !=
	* ++
	* (*)
	* ->
4. 双向迭代器		 	可读写，多遍扫描，可递增递减
	* == !=
	* ++  --
	* (*)
	* ->
	* (除了forward_list之外其他标准库都提供双向迭代器，算法reverse使用双向迭代器)
5. 随机访问迭代器  	可读写，多遍扫描，支持全部迭代器运算
	* == !=
	* ++  --
	* (*)
	* ->
	*  < > <= >=
	*  + += - -=
	*  支持两个迭代器的减法运算-，得到两个迭代器之间的距离
	*  下标访问符(iter[n])与*(iter[n])

算法sort要求随机访问迭代器，array、deque、string、和vector的迭代器都是随机访问迭代器，用于访问内置数组元素的指针也是。 
